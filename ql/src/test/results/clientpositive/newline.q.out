PREHOOK: query: create table tmp_tmp(key string, value string) stored as rcfile
PREHOOK: type: CREATETABLE
POSTHOOK: query: create table tmp_tmp(key string, value string) stored as rcfile
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@tmp_tmp
PREHOOK: query: insert overwrite table tmp_tmp
SELECT TRANSFORM(key, value) USING
'python newline.py' AS key, value FROM src limit 5
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tmp_tmp
POSTHOOK: query: insert overwrite table tmp_tmp
SELECT TRANSFORM(key, value) USING
'python newline.py' AS key, value FROM src limit 5
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tmp_tmp
POSTHOOK: Lineage: tmp_tmp.key SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: tmp_tmp.value SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: select * from tmp_tmp
PREHOOK: type: QUERY
PREHOOK: Input: default@tmp_tmp
#### A masked pattern was here ####
POSTHOOK: query: select * from tmp_tmp
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tmp_tmp
#### A masked pattern was here ####
POSTHOOK: Lineage: tmp_tmp.key SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
POSTHOOK: Lineage: tmp_tmp.value SCRIPT [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
1
2	NULL
1
2	NULL
1
2	NULL
1
2	NULL
1
2	NULL
